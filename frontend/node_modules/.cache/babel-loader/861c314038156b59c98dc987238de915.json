{"ast":null,"code":"var _jsxFileName = \"/home/lajob/ucu/web/ReactProject/herokuVersion/frontend/src/components/multiplayer/ChatSpace.js\";\nimport OtherQuestion from \"./OtherQuestion\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ChatSpace = _ref => {\n  let {\n    isEnabled,\n    otherQuestions,\n    socket\n  } = _ref;\n  if (isEnabled) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: otherQuestions.map(question => /*#__PURE__*/_jsxDEV(OtherQuestion, {\n      question: question,\n      noHandler: () => {\n        socket.emit(\"vote\", {\n          questionId: question.questionId,\n          voteType: 'negative'\n        });\n      },\n      yesHandler: () => {\n        socket.emit(\"vote\", {\n          questionId: question.questionId,\n          voteType: 'positive'\n        });\n      }\n    }, question.questionId, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 21\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 5,\n    columnNumber: 16\n  }, this);\n};\n\n_c = ChatSpace;\nexport default ChatSpace;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChatSpace\");","map":{"version":3,"names":["OtherQuestion","ChatSpace","isEnabled","otherQuestions","socket","map","question","emit","questionId","voteType"],"sources":["/home/lajob/ucu/web/ReactProject/herokuVersion/frontend/src/components/multiplayer/ChatSpace.js"],"sourcesContent":["import OtherQuestion from \"./OtherQuestion\"\n\nconst ChatSpace = ({ isEnabled, otherQuestions, socket }) => {\n    if (isEnabled)\n        return <div>\n            {\n                otherQuestions.map((question) =>\n                    <OtherQuestion\n                        key={question.questionId}\n                        question={question}\n                        noHandler={() => {\n                            socket.emit(\"vote\", { questionId: question.questionId, voteType: 'negative' });\n                        }}\n                        yesHandler={() => {\n                            socket.emit(\"vote\", { questionId: question.questionId, voteType: 'positive' });\n                        }}\n                    />)\n            }\n        </div>;\n};\n\nexport default ChatSpace;\n"],"mappings":";AAAA,OAAOA,aAAP,MAA0B,iBAA1B;;;AAEA,MAAMC,SAAS,GAAG,QAA2C;EAAA,IAA1C;IAAEC,SAAF;IAAaC,cAAb;IAA6BC;EAA7B,CAA0C;EACzD,IAAIF,SAAJ,EACI,oBAAO;IAAA,UAECC,cAAc,CAACE,GAAf,CAAoBC,QAAD,iBACf,QAAC,aAAD;MAEI,QAAQ,EAAEA,QAFd;MAGI,SAAS,EAAE,MAAM;QACbF,MAAM,CAACG,IAAP,CAAY,MAAZ,EAAoB;UAAEC,UAAU,EAAEF,QAAQ,CAACE,UAAvB;UAAmCC,QAAQ,EAAE;QAA7C,CAApB;MACH,CALL;MAMI,UAAU,EAAE,MAAM;QACdL,MAAM,CAACG,IAAP,CAAY,MAAZ,EAAoB;UAAEC,UAAU,EAAEF,QAAQ,CAACE,UAAvB;UAAmCC,QAAQ,EAAE;QAA7C,CAApB;MACH;IARL,GACSH,QAAQ,CAACE,UADlB;MAAA;MAAA;MAAA;IAAA,QADJ;EAFD;IAAA;IAAA;IAAA;EAAA,QAAP;AAeP,CAjBD;;KAAMP,S;AAmBN,eAAeA,SAAf"},"metadata":{},"sourceType":"module"}