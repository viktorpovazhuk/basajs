{"ast":null,"code":"var _jsxFileName = \"/home/lajob/ucu/web/ReactProject/herokuVersion/frontend/src/components/multiplayer/MyQuestion.js\";\nimport React from 'react'; // votes= {positiveCount: ..., negativeCount: ...}\n// question = {text:..., userName:..., id:...}\n// secretWord\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst MyQuestion = _ref => {\n  let {\n    question\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: question.text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Votes\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Yes: \", question.yes]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"No: \", question.no]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 9\n  }, this);\n};\n\n_c = MyQuestion;\nexport default MyQuestion;\n\nvar _c;\n\n$RefreshReg$(_c, \"MyQuestion\");","map":{"version":3,"names":["React","MyQuestion","question","text","yes","no"],"sources":["/home/lajob/ucu/web/ReactProject/herokuVersion/frontend/src/components/multiplayer/MyQuestion.js"],"sourcesContent":["import React from 'react';\n\n// votes= {positiveCount: ..., negativeCount: ...}\n// question = {text:..., userName:..., id:...}\n// secretWord\nconst MyQuestion = ({ question }) => {\n    return (\n        <div>\n            <div>\n                <p>{question.text}</p>\n            </div>\n            <div>\n                <h3>Votes</h3>\n                <p>Yes: {question.yes}</p>\n                <p>No: {question.no}</p>\n            </div>\n        </div>\n    )\n};\n\nexport default MyQuestion;"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CAEA;AACA;AACA;;;;AACA,MAAMC,UAAU,GAAG,QAAkB;EAAA,IAAjB;IAAEC;EAAF,CAAiB;EACjC,oBACI;IAAA,wBACI;MAAA,uBACI;QAAA,UAAIA,QAAQ,CAACC;MAAb;QAAA;QAAA;QAAA;MAAA;IADJ;MAAA;MAAA;MAAA;IAAA,QADJ,eAII;MAAA,wBACI;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QADJ,eAEI;QAAA,oBAASD,QAAQ,CAACE,GAAlB;MAAA;QAAA;QAAA;QAAA;MAAA,QAFJ,eAGI;QAAA,mBAAQF,QAAQ,CAACG,EAAjB;MAAA;QAAA;QAAA;QAAA;MAAA,QAHJ;IAAA;MAAA;MAAA;MAAA;IAAA,QAJJ;EAAA;IAAA;IAAA;IAAA;EAAA,QADJ;AAYH,CAbD;;KAAMJ,U;AAeN,eAAeA,UAAf"},"metadata":{},"sourceType":"module"}