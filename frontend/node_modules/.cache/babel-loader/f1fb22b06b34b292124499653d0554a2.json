{"ast":null,"code":"import React from'react';import Form from'./Form';import MyQuestion from'./MyQuestion';import MyGuess from'./MyGuess';import{nanoid}from'nanoid';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var UserSpace=function UserSpace(_ref){var personalQuestions=_ref.personalQuestions,personalGuesses=_ref.personalGuesses,postQuestionHandler=_ref.postQuestionHandler,guessHandler=_ref.guessHandler,isEnabled=_ref.isEnabled,isFormEnabled=_ref.isFormEnabled,socket=_ref.socket;if(isEnabled){return/*#__PURE__*/_jsxs(\"div\",{className:\"GameInfo\",children:[/*#__PURE__*/_jsx(Form,{isEnabled:isFormEnabled,postQuestionHandler:postQuestionHandler,guessHandler:guessHandler}),/*#__PURE__*/_jsx(\"div\",{children:personalQuestions.map(function(question){return/*#__PURE__*/_jsx(MyQuestion,{question:question},question.questionId);})}),/*#__PURE__*/_jsx(\"div\",{children:personalGuesses.map(function(guess){return/*#__PURE__*/_jsx(MyGuess,{guess:guess},nanoid());})})]});}};export default UserSpace;","map":{"version":3,"names":["React","Form","MyQuestion","MyGuess","nanoid","UserSpace","personalQuestions","personalGuesses","postQuestionHandler","guessHandler","isEnabled","isFormEnabled","socket","map","question","questionId","guess"],"sources":["/home/lajob/ucu/web/ReactProject/herokuVersion/frontend/src/components/multiplayer/UserSpace.js"],"sourcesContent":["import React from 'react';\nimport Form from './Form';\nimport MyQuestion from './MyQuestion';\nimport MyGuess from './MyGuess';\n\nimport { nanoid } from 'nanoid';\n\nconst UserSpace = ({ personalQuestions, personalGuesses, postQuestionHandler, guessHandler, isEnabled, isFormEnabled, socket }) => {\n    if (isEnabled) {\n        return (\n            <div className=\"GameInfo\">\n                <Form isEnabled={isFormEnabled} postQuestionHandler={postQuestionHandler} guessHandler={guessHandler} />\n                <div>\n                    {\n                        personalQuestions.map((question) =>\n                            <MyQuestion\n                                key={question.questionId}\n                                question={question}\n                            />)\n                    }\n                </div>\n                <div>\n                    {\n                        personalGuesses.map((guess) =>\n                            <MyGuess\n                                key={nanoid()}\n                                guess={guess}\n                            />)\n                    }\n                </div>\n                {/* <ItemList list={questions} inputType={'questions'} />\n                <hr />\n                <ItemList list={guesses} inputType={'guesses'} /> */}\n            </div>\n        );\n    }\n}\n\n\nexport default UserSpace;\n"],"mappings":"AAAA,MAAOA,MAAP,KAAkB,OAAlB,CACA,MAAOC,KAAP,KAAiB,QAAjB,CACA,MAAOC,WAAP,KAAuB,cAAvB,CACA,MAAOC,QAAP,KAAoB,WAApB,CAEA,OAASC,MAAT,KAAuB,QAAvB,C,wFAEA,GAAMC,UAAS,CAAG,QAAZA,UAAY,MAAiH,IAA9GC,kBAA8G,MAA9GA,iBAA8G,CAA3FC,eAA2F,MAA3FA,eAA2F,CAA1EC,mBAA0E,MAA1EA,mBAA0E,CAArDC,YAAqD,MAArDA,YAAqD,CAAvCC,SAAuC,MAAvCA,SAAuC,CAA5BC,aAA4B,MAA5BA,aAA4B,CAAbC,MAAa,MAAbA,MAAa,CAC/H,GAAIF,SAAJ,CAAe,CACX,mBACI,aAAK,SAAS,CAAC,UAAf,wBACI,KAAC,IAAD,EAAM,SAAS,CAAEC,aAAjB,CAAgC,mBAAmB,CAAEH,mBAArD,CAA0E,YAAY,CAAEC,YAAxF,EADJ,cAEI,qBAEQH,iBAAiB,CAACO,GAAlB,CAAsB,SAACC,QAAD,qBAClB,KAAC,UAAD,EAEI,QAAQ,CAAEA,QAFd,EACSA,QAAQ,CAACC,UADlB,CADkB,EAAtB,CAFR,EAFJ,cAWI,qBAEQR,eAAe,CAACM,GAAhB,CAAoB,SAACG,KAAD,qBAChB,KAAC,OAAD,EAEI,KAAK,CAAEA,KAFX,EACSZ,MAAM,EADf,CADgB,EAApB,CAFR,EAXJ,GADJ,CA0BH,CACJ,CA7BD,CAgCA,cAAeC,UAAf"},"metadata":{},"sourceType":"module"}